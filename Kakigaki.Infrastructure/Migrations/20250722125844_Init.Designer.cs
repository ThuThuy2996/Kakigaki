// <auto-generated />
using System;
using Kakigaki.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kakigaki.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250722125844_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Japanese_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__categori__3213E83FF96E60E1");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("AccessLevel")
                        .HasColumnType("int")
                        .HasColumnName("access_level");

                    b.Property<string>("AudioUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("audio_url");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int")
                        .HasColumnName("level_id");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__lessons__3213E83FDE78F204");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LevelId");

                    b.ToTable("lessons", (string)null);
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.LessonDetail", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("EndTimeSeconds")
                        .HasColumnType("int")
                        .HasColumnName("end_time_seconds");

                    b.Property<int?>("LessonId")
                        .HasColumnType("int")
                        .HasColumnName("lesson_id");

                    b.Property<int?>("LessonIdSeq")
                        .HasColumnType("int")
                        .HasColumnName("lesson_id_seq");

                    b.Property<int?>("StartTimeSeconds")
                        .HasColumnType("int")
                        .HasColumnName("start_time_seconds");

                    b.Property<string>("Transcript")
                        .HasColumnType("text")
                        .HasColumnName("transcript");

                    b.HasKey("Id")
                        .HasName("PK__lesson_d__3213E83FC0250A69");

                    b.HasIndex("LessonId");

                    b.ToTable("lesson_details", (string)null);
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.LessonSession", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("int")
                        .HasColumnName("duration_minutes");

                    b.Property<int?>("LastSequence")
                        .HasColumnType("int")
                        .HasColumnName("last_sequence");

                    b.Property<int?>("LessonId")
                        .HasColumnType("int")
                        .HasColumnName("lesson_id");

                    b.Property<int?>("TotalCompletedTimes")
                        .HasColumnType("int")
                        .HasColumnName("total_completed_times");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__lesson_s__3213E83FAAE42471");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("lesson_sessions", (string)null);
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.LessonTranslation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("LanguageCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("language_code");

                    b.Property<int?>("LessonDetailId")
                        .HasColumnType("int")
                        .HasColumnName("lesson_detail_id");

                    b.Property<string>("Translation")
                        .HasColumnType("text")
                        .HasColumnName("translation");

                    b.HasKey("Id")
                        .HasName("PK__lesson_t__3213E83F59CFF9CF");

                    b.HasIndex("LessonDetailId");

                    b.ToTable("lesson_translations", (string)null);
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.Level", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__levels__3213E83F91E27F0F");

                    b.ToTable("levels", (string)null);
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime")
                        .HasColumnName("expires_at");

                    b.Property<DateTime?>("IssuedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("issued_at");

                    b.Property<string>("RefreshToken1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("refresh_token");

                    b.Property<bool?>("Revoked")
                        .HasColumnType("bit")
                        .HasColumnName("revoked");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__refresh___3213E83FC32A9AA1");

                    b.HasIndex("UserId");

                    b.ToTable("refresh_tokens", (string)null);
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Displayname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("displayname");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("GoogleId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("google_id");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<int?>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F0FCF202C");

                    b.HasIndex(new[] { "Email" }, "UQ__users__AB6E6164FEBD02FC")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.UserDailyActivity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ActivityDate")
                        .HasColumnType("datetime")
                        .HasColumnName("activity_date");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("LessonsCompleted")
                        .HasColumnType("int")
                        .HasColumnName("lessons_completed");

                    b.Property<int?>("StudyTimeMinutes")
                        .HasColumnType("int")
                        .HasColumnName("study_time_minutes");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__user_dai__3213E83F870F6B06");

                    b.HasIndex("UserId");

                    b.ToTable("user_daily_activity", (string)null);
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.UserStatistic", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("CurrentStreakDays")
                        .HasColumnType("int")
                        .HasColumnName("current_streak_days");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_login_date");

                    b.Property<int?>("LongestStreakDays")
                        .HasColumnType("int")
                        .HasColumnName("longest_streak_days");

                    b.Property<int?>("TotalLessonsCompleted")
                        .HasColumnType("int")
                        .HasColumnName("total_lessons_completed");

                    b.Property<int?>("TotalStudyTimeMinutes")
                        .HasColumnType("int")
                        .HasColumnName("total_study_time_minutes");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__user_sta__3213E83F31FF2295");

                    b.HasIndex("UserId");

                    b.ToTable("user_statistics", (string)null);
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.Lesson", b =>
                {
                    b.HasOne("Kakigaki.Infrastructure.Data.Models.Category", "Category")
                        .WithMany("Lessons")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__lessons__categor__4CA06362");

                    b.HasOne("Kakigaki.Infrastructure.Data.Models.Level", "Level")
                        .WithMany("Lessons")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK__lessons__level_i__4D94879B");

                    b.Navigation("Category");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.LessonDetail", b =>
                {
                    b.HasOne("Kakigaki.Infrastructure.Data.Models.Lesson", "Lesson")
                        .WithMany("LessonDetails")
                        .HasForeignKey("LessonId")
                        .HasConstraintName("FK__lesson_de__lesso__4E88ABD4");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.LessonSession", b =>
                {
                    b.HasOne("Kakigaki.Infrastructure.Data.Models.Lesson", "Lesson")
                        .WithMany("LessonSessions")
                        .HasForeignKey("LessonId")
                        .HasConstraintName("FK__lesson_se__lesso__5165187F");

                    b.HasOne("Kakigaki.Infrastructure.Data.Models.User", "User")
                        .WithMany("LessonSessions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__lesson_se__user___5070F446");

                    b.Navigation("Lesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.LessonTranslation", b =>
                {
                    b.HasOne("Kakigaki.Infrastructure.Data.Models.LessonDetail", "LessonDetail")
                        .WithMany("LessonTranslations")
                        .HasForeignKey("LessonDetailId")
                        .HasConstraintName("FK__lesson_tr__lesso__4F7CD00D");

                    b.Navigation("LessonDetail");
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.RefreshToken", b =>
                {
                    b.HasOne("Kakigaki.Infrastructure.Data.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__refresh_t__user___49C3F6B7");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.UserDailyActivity", b =>
                {
                    b.HasOne("Kakigaki.Infrastructure.Data.Models.User", "User")
                        .WithMany("UserDailyActivities")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__user_dail__user___4BAC3F29");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.UserStatistic", b =>
                {
                    b.HasOne("Kakigaki.Infrastructure.Data.Models.User", "User")
                        .WithMany("UserStatistics")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__user_stat__user___4AB81AF0");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.Category", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.Lesson", b =>
                {
                    b.Navigation("LessonDetails");

                    b.Navigation("LessonSessions");
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.LessonDetail", b =>
                {
                    b.Navigation("LessonTranslations");
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.Level", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("Kakigaki.Infrastructure.Data.Models.User", b =>
                {
                    b.Navigation("LessonSessions");

                    b.Navigation("RefreshTokens");

                    b.Navigation("UserDailyActivities");

                    b.Navigation("UserStatistics");
                });
#pragma warning restore 612, 618
        }
    }
}
